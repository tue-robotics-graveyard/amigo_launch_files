<?xml version="1.0"?>

<launch>
<!-- KINECT -->

  <include file="$(find amigo_machine_files)/machines/amigo1.machine" />
  <include file="$(find amigo_machine_files)/machines/amigo2.machine" />
  <include file="$(find amigo_machine_files)/machines/amigo3.machine" />
  <include file="$(find amigo_machine_files)/machines/amigo4.machine" />
  <include file="$(find amigo_machine_files)/machines/localhost.machine" />

  <arg if="$(optenv ROBOT_REAL false)" name="machine" value="amigo1"/>
  <arg unless="$(optenv ROBOT_REAL false)" name="machine" value="localhost"/>

  <!-- voxelizer -->
  <!-- include file="$(find amigo_point_voxelizer)/launch/amigo_point_voxelizer.launch" /-->
  
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" machine="$(arg machine)"/>

    <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen" machine="$(arg machine)">
      <remap from="~input" to="/camera/rgb/points" />
      <remap from="~output" to="/camera/rgb/points_voxelized" />
      <rosparam>
        filter_field_name: z
        filter_limit_min: 0.01
        filter_limit_max: 4.5
        filter_limit_negative: False
        frame_out: base_link
        leaf_size: 0.01
      </rosparam>
    </node>

  <!-- point cloud converter so that navigation maps accept incoming clouds from kinect 
  <node pkg="point_cloud_converter" type="point_cloud_converter" name="kinect_cloud_converter" machine="$(arg machine)" >
    <remap from="points2_in" to="/camera/rgb/points_voxelized"/>
    <remap from="points_out" to="/camera/rbg/points_voxelized_pc1_format"/>
  </node>-->

 <!-- point cloud converter so that navigation maps accept incoming clouds from kinect -->
  <!--node pkg="semantic_point_annotator" type="sac_inc_ground_removal_node" name="sac_ground_removal" machine="$(arg machine)" >
    <remap from="tilt_laser_cloud_filtered" to="/camera/rbg/points_voxelized_pc1_format_voxel" />
    <remap from="cloud_ground_filtered" to="/camera/rbg/points_voxelized_pc1_format" />
    <param name="z_threshold" value="0.15" />
    <param name="sac_min_points_per_model" value="6" />
    <param name="sac_distance_threshold" value="0.05" />
    <param name="planar_refine" value="1" />
  </node-->

</launch>
